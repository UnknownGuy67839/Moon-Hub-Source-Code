loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()

MakeWindow({
  Hub = {
    Title = "Moon Hub",
    Animation = "by : Fearvamp"
  },
  Key = {
    KeySystem = true,
    Title = "Key System",
    Description = "",
    KeyLink = "https://discord.gg/pZtQzAqf",
    Keys = {"MoonHubOnTOP"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

local Main = MakeTab({Name = "Main"})

local section = AddSection(Main, {"Silders"})

local Slider = AddSlider(Main, {
  Name = "Walkspeed",
  MinValue = 16,
  MaxValue = 100,
  Default = 16,
  Increase = 1,
  Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
  end
})
UpdateSlider(Slider, 16)

--[[
  <number> novo valor do controle deslizante
]]

local Slider = AddSlider(Main, {
  Name = "jump power",
  MinValue = 50,
  MaxValue = 100,
  Default = 50,
  Increase = 1,
  Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
  end
})
UpdateSlider(Slider, 50)

--[[
  <number> novo valor do controle deslizante
]]
local section = AddSection(Main, {"Noclip"})
--[[
  {"Noclip"} <table> nome da janela
]]
local Toggle = AddToggle(Main, {
  Name = "Toggle Noclip",
  Default = false,
  Callback = function(Value)
    
  end
})

--[[
  Name = "Toggle Noclip" <string> nome da sua caixa de seleção
  Default = false <boolean> valor padrão
  Callback = function(Value)
    -- função da sua caixa de seleção
  end]]
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local runService = game:GetService("RunService")

-- Variables
local rootPart = character:WaitForChild("HumanoidRootPart") -- Main part for collisions
local noclipEnabled = player:WaitForChild("NoclipEnabled") -- External toggle for noclip

-- Function to disable or enable collisions based on noclip state
local function updateNoclipState()
    if noclipEnabled.Value then
        -- Disable collisions (noclip on)
        rootPart.CanCollide = false
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    else
        -- Enable collisions (noclip off)
        rootPart.CanCollide = true
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

-- Continuously update collision state based on noclip toggle
runService.Stepped:Connect(function()
    updateNoclipState()
end)
player.NoclipEnabled.Value = true -- Toggle Noclip
player.NoclipEnabled.Value = false -- Toggle Noclip
